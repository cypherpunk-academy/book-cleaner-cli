name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x, 20.x, 22.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint

            - name: Run tests
              run: npm run test:coverage

            - name: Upload coverage to Codecov
              if: matrix.node-version == '20.x'
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella

            - name: Build project
              run: npm run build

    security:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run security audit
              run: npm audit --audit-level=moderate

    release:
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        needs: [test, security]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build project
              run: npm run build

            - name: Create release
              if: success()
              run: |
                  echo "Release would be created here"
                  # Add actual release logic here when ready
